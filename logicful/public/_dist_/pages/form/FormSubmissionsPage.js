import{SvelteComponent as T,check_outros as B,create_component as $,destroy_component as h,detach as k,element as H,empty as V,group_outros as q,init as z,insert as C,mount_component as j,noop as G,safe_not_equal as K,space as Q,transition_in as c,transition_out as w}from"../../../web_modules/svelte/internal.js";import{tick as W}from"../../../web_modules/svelte.js";import{LoadState as X}from"../../models/LoadState.js";import Y from"../../components/RemoteTable.js";import{isObject as _}from"../../guards/Guard.js";import{deleteApi as Z,getApi as D,putApi as R}from"../../services/ApiService.js";import{getUrlParameter as x}from"../../util/Http.js";import ee from"../../components/layout/Dialog.js";import te from"../../features/form/live/FormPreview.js";import{fastClone as se}from"../../util/Compare.js";import ie from"../../components/Shell.js";function oe(r){let e,i;return e=new Y({props:{defaultSortColumn:"Submission Date",searchPlaceHolder:"Search Anything...",columnMeta:{"Submission Date":{type:"date"}},getRows:r[3],sortColumns:r[4],onDelete:r[6],onRowClick:r[5],onRead:r[7],onFormat:N,hidden:r[2]}}),{c(){$(e.$$.fragment)},m(t,s){j(e,t,s),i=!0},p:G,i(t){if(i)return;c(e.$$.fragment,t),i=!0},o(t){w(e.$$.fragment,t),i=!1},d(t){h(e,t)}}}function I(r){let e,i;return e=new ee({props:{isOpen:!0,width:"960px",title:"Viewing Submission Details",onClose:r[9],$$slots:{default:[ne]},$$scope:{ctx:r}}}),{c(){$(e.$$.fragment)},m(t,s){j(e,t,s),i=!0},p(t,s){const o={};s&2&&(o.onClose=t[9]),s&16387&&(o.$$scope={dirty:s,ctx:t}),e.$set(o)},i(t){if(i)return;c(e.$$.fragment,t),i=!0},o(t){w(e.$$.fragment,t),i=!1},d(t){h(e,t)}}}function ne(r){let e,i,t;return i=new te({props:{submission:r[1],form:r[0],mode:"submission_preview"}}),{c(){e=H("div"),$(i.$$.fragment)},m(s,o){C(s,e,o),j(i,e,null),t=!0},p(s,o){const n={};o&2&&(n.submission=s[1]),o&1&&(n.form=s[0]),i.$set(n)},i(s){if(t)return;c(i.$$.fragment,s),t=!0},o(s){w(i.$$.fragment,s),t=!1},d(s){s&&k(e),h(i)}}}function re(r){let e,i,t,s;e=new ie({props:{header:"Form Submissions",sidebar:!1,$$slots:{default:[oe]},$$scope:{ctx:r}}});let o=r[1]&&r[0]&&I(r);return{c(){$(e.$$.fragment),i=Q(),o&&o.c(),t=V()},m(n,d){j(e,n,d),C(n,i,d),o&&o.m(n,d),C(n,t,d),s=!0},p(n,[d]){const S={};d&16384&&(S.$$scope={dirty:d,ctx:n}),e.$set(S),n[1]&&n[0]?o?(o.p(n,d),d&3&&c(o,1)):(o=I(n),o.c(),c(o,1),o.m(t.parentNode,t)):o&&(q(),w(o,1,1,()=>{o=null}),B())},i(n){if(s)return;c(e.$$.fragment,n),c(o),s=!0},o(n){w(e.$$.fragment,n),w(o),s=!1},d(n){h(e,n),n&&k(i),o&&o.d(n),n&&k(t)}}}let v={};function N(r,e){const i=v[r];if(i==="address"&&_(e)){const t=[e?.address1?.value,e?.address2?.value,e?.state?.value,e?.city?.value,e?.zip?.value];return t.filter(s=>s).join(" ")}if(i==="checkbox-group"&&_(e))return Object.values(e).filter(t=>t!=null).join(", ");if(i==="radio-group"&&_(e))return Object.values(e).find(t=>t!=null);if(i==="full-name"&&_(e)){const t=[e?.prefix?.value,e?.first?.value,e?.middle?.value,e?.last?.value];return t.filter(s=>s).join(" ")}return i==="file"&&_(e)?e?`${e.name??e.id}, ${e.type}`:"No file submitted":void 0}function fe(r,e,i){let{formId:t=""}=e,{form:s=void 0}=e,o=X.NotStarted,n=new Set(["submission_id","full_submission_data","meta_unread"]),d;async function S(){if(i(8,t=x("formId")??""),!t)return[];if(i(0,s=await D(`form/${t}`)),!s)return[];const m=await D(`form/${t}/submission`),a=await fetch(m.message);let u=[];a.ok?u=await a.json():u=[];const l=await M(s),p={};if(!s.fields||s.fields?.length===0)return[];s.fields.forEach(f=>{f.name&&(p[f.name]=f.label??f.name)});const y=JSON.parse(sessionStorage.getItem("deleted_submissions")||JSON.stringify({}));return setTimeout(()=>{E()},2e3),u.filter(f=>!y[f.id]).map(f=>(f.isUnread=!(l[f.id]===!0),Object.keys(f.details).forEach(b=>{if(p[b]){const g=p[b];f.details[g]=f.details[b],v[g]=s.fields.find(O=>O.label===g)?.type??"",delete f.details[b]}else{const g=s.fields.find(O=>O.name===b)?.type;g&&(v[b]=g)}}),f.details["Submission Date"]=new Date(f.creationDate).toLocaleString(),f.details.submission_id=f.id,f.details.full_submission_data=JSON.stringify(f),f.details.meta_unread=f.isUnread,f.details))}function J(m){return m.sort((a,u)=>s.fields.findIndex(l=>l.label===a)-s.fields.findIndex(l=>l.label===u))}function F(m){const a=JSON.parse(m.full_submission_data);i(1,d=se(a)),U(a.formId,[a])}async function P(m){const a=m.map(l=>l.submission_id).filter(l=>l!=null);await Z(`form/${t}/submission`,a);const u=JSON.parse(sessionStorage.getItem("deleted_submissions")||JSON.stringify({}));a.forEach(l=>{u[l]=!0}),sessionStorage.setItem("deleted_submissions",JSON.stringify(u))}async function A(m,a){const u={};if(m.forEach(l=>{console.log(l);const p=l.submission_id;if(!p)return;const y=Boolean(l.meta_unread);if(y===!a)return;u[p]=a}),Object.keys(u).length===0)return;await R(`form/${t}/submission/mark/read`,u)}async function E(){if(s.unreadSubmissions===0)return;i(0,s.unreadSubmissions=0,s),R(`form/${s.id}`,s)}async function U(m,a){if(a=a.filter(l=>l.isUnread),a.length===0)return;const u={};a.forEach(l=>u[l.id]=!0),await R(`form/${m}/submission/mark/read`,u)}async function M(m){return await D(`form/${m.id}/submission/read`)}const L=async()=>{console.log("closed"),i(1,d=void 0),await W()};return r.$$set=m=>{"formId"in m&&i(8,t=m.formId),"form"in m&&i(0,s=m.form)},[s,d,n,S,J,F,P,A,t,L]}class ae extends T{constructor(r){super();z(this,r,fe,re,K,{formId:8,form:0})}}export default ae;export{N as formatSubmissionItem};
