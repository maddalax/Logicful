import i from"../store/FormStore.js";import{nullOrEmpty as o}from"../util/Compare.js";import{isLabelValue as u}from"../guards/Guard.js";export class LogicBuilder{evaluate(e){if(!e.logic)return!0;if(!e.logic.rules)return!0;const t=e.logic.rules.filter(r=>!(o(r.field)||o(r.condition)));if(t.length===0)return!0;if(e.logic.action==="show-any-match"){for(let r of t){const s=i.getValue(r.field);if(s==null)continue;if(this.evaluateCondition(r,s))return!0}return!1}if(e.logic.action==="show-all-match"){for(let r of t){const s=i.getValue(r.field);if(s==null)return!1;if(!this.evaluateCondition(r,s))return!1}return!0}if(e.logic.action==="hide-all-match"){for(let r of t){const s=i.getValue(r.field);if(s==null)return!0;if(!this.evaluateCondition(r,s))return!0}return!1}if(e.logic.action==="hide-any-match"){for(let r of t){const s=i.getValue(r.field);if(s==null)continue;if(this.evaluateCondition(r,s))return!1}return!0}return!1}evaluateCondition(e,t){if(u(t))return this.evaluateCondition(e,t.value)||this.evaluateCondition(e,t.label);switch(e.condition){case"contains":return this.toLowerCase(t).includes(this.toLowerCase(e.value));case"startsWith":return this.toLowerCase(t).startsWith(this.toLowerCase(e.value));case"endsWith":return this.toLowerCase(t).endsWith(this.toLowerCase(e.value));case"eq":return this.toLowerCase(t)==this.toLowerCase(e.value);case"gt":return parseFloat(t)>parseFloat(e.value);case"lt":return parseFloat(t)<parseFloat(e.value);case"lte":return parseFloat(t)<=parseFloat(e.value);case"gte":return parseFloat(t)>=parseFloat(e.value);case"hasValue":return this.hasValue(t);case"notHaveValue":return!this.hasValue(t);case"isTrue":return t!=null&&t==!0;case"isFalse":return t!=null&&t==!1;case"isFileExtension":return this.isFileExtension(t,e);case"isNotFileExtension":return!this.isFileExtension(t,e);default:return!1}}hasValue(e){return e!=null&&e!=""}isFileExtension(e,t){if(!this.hasValue(e))return!1;const r=i.getFile(e);if(!r)return!1;const s=r.name,a=s.split(".");if(a.length<2)return!1;const l=t.value.split(",").map(n=>n.replace(" ","").replace(".",""));for(let n of l)if(n===a[a.length-1])return!0;return!1}toLowerCase(e){return this.hasValue(e)?e.toString().toLowerCase():""}}
