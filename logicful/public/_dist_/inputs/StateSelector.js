/* src/inputs/StateSelector.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	create_component,
	destroy_component,
	init,
	mount_component,
	safe_not_equal,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import ComboBox from "./ComboBox.js";

function create_fragment(ctx) {
	let combobox;
	let current;

	combobox = new ComboBox({
			props: {
				field: {
					id: /*id*/ ctx[3],
					name: /*name*/ ctx[2],
					label: /*label*/ ctx[0],
					helperText: "Zip Code",
					hideLabel: true,
					required: true,
					type: "combobox",
					value: /*value*/ ctx[1],
					options: {
						type: "remote",
						value: "https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_hash.json"
					}
				}
			}
		});

	return {
		c() {
			create_component(combobox.$$.fragment);
		},
		m(target, anchor) {
			mount_component(combobox, target, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			const combobox_changes = {};

			if (dirty & /*id, name, label, value*/ 15) combobox_changes.field = {
				id: /*id*/ ctx[3],
				name: /*name*/ ctx[2],
				label: /*label*/ ctx[0],
				helperText: "Zip Code",
				hideLabel: true,
				required: true,
				type: "combobox",
				value: /*value*/ ctx[1],
				options: {
					type: "remote",
					value: "https://gist.githubusercontent.com/mshafrir/2646763/raw/8b0dbb93521f5d6889502305335104218454c2bf/states_hash.json"
				}
			};

			combobox.$set(combobox_changes);
		},
		i(local) {
			if (current) return;
			transition_in(combobox.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(combobox.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(combobox, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { label = "State" } = $$props;
	let { value = "" } = $$props;
	let { name } = $$props;
	let { id } = $$props;
	let { helperText } = $$props;
	let { hideLabel } = $$props;

	$$self.$$set = $$props => {
		if ("label" in $$props) $$invalidate(0, label = $$props.label);
		if ("value" in $$props) $$invalidate(1, value = $$props.value);
		if ("name" in $$props) $$invalidate(2, name = $$props.name);
		if ("id" in $$props) $$invalidate(3, id = $$props.id);
		if ("helperText" in $$props) $$invalidate(4, helperText = $$props.helperText);
		if ("hideLabel" in $$props) $$invalidate(5, hideLabel = $$props.hideLabel);
	};

	return [label, value, name, id, helperText, hideLabel];
}

class StateSelector extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			label: 0,
			value: 1,
			name: 2,
			id: 3,
			helperText: 4,
			hideLabel: 5
		});
	}
}

export default StateSelector;