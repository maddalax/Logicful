/* src/inputs/TextArea.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	append,
	binding_callbacks,
	detach,
	element as element_1,
	init,
	insert,
	noop,
	safe_not_equal
} from "../../web_modules/svelte/internal.js";

import { subscribeFieldChange } from "../event/FieldEvent.js";
import { onMount } from "../../web_modules/svelte.js";
import formStore from "../store/FormStore.js";

function create_fragment(ctx) {
	let div1;
	let div0;

	return {
		c() {
			div1 = element_1("div");
			div0 = element_1("div");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			/*div0_binding*/ ctx[4](div0);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div1);
			/*div0_binding*/ ctx[4](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let element;
	let { field } = $$props;
	let { value = { blocks: [] } } = $$props;
	let { onChange } = $$props;
	let editor;

	function onFieldChange(data) {
		onChange?.(data);
	}

	subscribeFieldChange(onMount, newField => {
		if (newField.id === field.id) {
			$$invalidate(2, value = newField.value ?? "");
		}
	});

	onMount(async () => {
		//@ts-ignore
		import("../../web_modules/quill/dist/quill.js");

		//@ts-ignore
		import("../../web_modules/quill/dist/quill.snow.css.proxy.js");

		const Quill = (await import("../../web_modules/quill.js")).default;
		$$invalidate(2, value = formStore.getValue(field.configTarget ?? field.id) ?? "");

		var toolbarOptions = [
			["bold", "italic", "underline", "strike"],
			[{ list: "ordered" }, { list: "bullet" }],
			[{ header: [1, 2, 3, 4, 5, 6, false] }, { color: [] }, { align: [] }],
			["clean"]
		];

		let quill = new Quill(element,
		{
				theme: "snow",
				placeholder: "Start typing and see the preview on the left side.",
				modules: { toolbar: toolbarOptions }
			});

		//@ts-ignore
		quill.container.firstChild.innerHTML = value;

		quill.on("text-change", function (delta, oldDelta, source) {
			//@ts-ignore
			$$invalidate(1, field.value = quill.container.firstChild.innerHTML, field);

			formStore.set(field, {
				fromUser: true,
				value: field.value,
				field: "value"
			});
		});
	});

	function div0_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			element = $$value;
			$$invalidate(0, element);
		});
	}

	$$self.$$set = $$props => {
		if ("field" in $$props) $$invalidate(1, field = $$props.field);
		if ("value" in $$props) $$invalidate(2, value = $$props.value);
		if ("onChange" in $$props) $$invalidate(3, onChange = $$props.onChange);
	};

	return [element, field, value, onChange, div0_binding];
}

class TextArea extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { field: 1, value: 2, onChange: 3 });
	}
}

export default TextArea;