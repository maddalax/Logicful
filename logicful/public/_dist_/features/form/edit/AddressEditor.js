/* src/features/form/edit/AddressEditor.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal
} from "../../../../web_modules/svelte/internal.js";

import Field from "./Field.js";
import { randomString } from "../../../util/Generate.js";
import { dispatch } from "../../../event/EventBus.js";
import ContentBlockList from "./ContentBlockList.js";

function create_fragment(ctx) {
	let div1;

	return {
		c() {
			div1 = element("div");

			div1.innerHTML = `<div style="padding-left: 0.5em;"><h5 style="padding-bottom: 0.2em;">Address Settings</h5> 
    <hr/></div>`;
		},
		m(target, anchor) {
			insert(target, div1, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div1);
		}
	};
}

function loadTransformer(value) {
	return value.map(v => {
		return { label: v.name, value: v.value };
	});
}

function instance($$self, $$props, $$invalidate) {
	
	
	let { field } = $$props;
	let { expanded } = $$props;

	function manageBlocks() {
		dispatch("dialog_show", {
			child: ContentBlockList,
			closeOnOutsideClick: false,
			confirmCloseOnDirty: true,
			title: "Manage Content Blocks",
			save: false
		});
	}

	$$self.$$set = $$props => {
		if ("field" in $$props) $$invalidate(0, field = $$props.field);
		if ("expanded" in $$props) $$invalidate(1, expanded = $$props.expanded);
	};

	return [field, expanded];
}

class AddressEditor extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { field: 0, expanded: 1 });
	}
}

export default AddressEditor;