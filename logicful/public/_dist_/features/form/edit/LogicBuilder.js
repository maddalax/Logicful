import{SvelteComponent as p,create_component as s,destroy_component as c,detach as g,init as v,insert as $,mount_component as d,safe_not_equal as w,space as y,transition_in as u,transition_out as m}from"../../../../web_modules/svelte/internal.js";import"./Field.js";import{randomString as h}from"../../../util/Generate.js";import"../../../components/Repeater.js";import b from"../../../components/LogicRule.js";import _ from"./ConfigField.js";function S(i){let t,a,l,o;return t=new _({props:{field:{id:h(),label:"Select Action",helperText:"What should happen when all or some of your rules are matched.",value:{type:"local",value:i[0].logic?.action},type:"combobox",required:!0,configFieldTarget:"logic.action",configTarget:i[0].id,options:{type:"local",value:i[1]}}}}),l=new b({props:{field:i[0]}}),{c(){s(t.$$.fragment),a=y(),s(l.$$.fragment)},m(e,n){d(t,e,n),$(e,a,n),d(l,e,n),o=!0},p(e,[n]){const r={};n&1&&(r.field={id:h(),label:"Select Action",helperText:"What should happen when all or some of your rules are matched.",value:{type:"local",value:e[0].logic?.action},type:"combobox",required:!0,configFieldTarget:"logic.action",configTarget:e[0].id,options:{type:"local",value:e[1]}}),t.$set(r);const f={};n&1&&(f.field=e[0]),l.$set(f)},i(e){if(o)return;u(t.$$.fragment,e),u(l.$$.fragment,e),o=!0},o(e){m(t.$$.fragment,e),m(l.$$.fragment,e),o=!1},d(e){c(t,e),e&&g(a),c(l,e)}}}function j(i,t,a){let{field:l}=t;const o=[{label:"Show this field when all rule(s) match",value:"show-all-match"},{label:"Show this field when any rule(s) match",value:"show-any-match"},{label:"Hide this field when any rule(s) match",value:"hide-any-match"},{label:"Hide this field when all rule(s) match",value:"hide-all-match"}];return i.$$set=e=>{"field"in e&&a(0,l=e.field)},[l,o]}class F extends p{constructor(i){super();v(this,i,j,S,w,{field:0})}}export default F;
