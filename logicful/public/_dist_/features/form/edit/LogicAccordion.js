import './LogicAccordion.css.proxy.js';
/* src/features/form/edit/LogicAccordion.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out
} from "../../../../web_modules/svelte/internal.js";

import LogicBuilder from "./LogicBuilder.js";

function create_fragment(ctx) {
	let div4;
	let div3;
	let div0;
	let t2;
	let div2;
	let div1;
	let p;
	let logicbuilder;
	let current;
	logicbuilder = new LogicBuilder({ props: { field: /*field*/ ctx[0] } });

	return {
		c() {
			div4 = element("div");
			div3 = element("div");
			div0 = element("div");

			div0.innerHTML = `<h2 class="mb-0"><button class="btn btn-link btn-block d-flex justify-content-between text-left" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne"><span class="h6 mb-0 font-weight-bold">Logic</span> 
          <span class="icon"><span class="fas fa-plus" style="font-size: 1em;"></span></span></button></h2>`;

			t2 = space();
			div2 = element("div");
			div1 = element("div");
			p = element("p");
			create_component(logicbuilder.$$.fragment);
			attr(div0, "class", "card-header accordionHeader svelte-12yv0lm");
			attr(div0, "id", "headingOne");
			attr(p, "class", "mb-0");
			attr(div1, "class", "card-body svelte-12yv0lm");
			attr(div2, "id", "collapseOne");
			attr(div2, "class", "collapse accordionCollapse svelte-12yv0lm");
			attr(div2, "aria-labelledby", "headingOne");
			attr(div2, "data-parent", "#accordionLogic");
			attr(div3, "class", "card border-light mb-0 svelte-12yv0lm");
			attr(div4, "class", "accordion mt-4 svelte-12yv0lm");
			attr(div4, "id", "accordionLogic");
			set_style(div4, "margin-bottom", "1em");
		},
		m(target, anchor) {
			insert(target, div4, anchor);
			append(div4, div3);
			append(div3, div0);
			append(div3, t2);
			append(div3, div2);
			append(div2, div1);
			append(div1, p);
			mount_component(logicbuilder, p, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const logicbuilder_changes = {};
			if (dirty & /*field*/ 1) logicbuilder_changes.field = /*field*/ ctx[0];
			logicbuilder.$set(logicbuilder_changes);
		},
		i(local) {
			if (current) return;
			transition_in(logicbuilder.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(logicbuilder.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div4);
			destroy_component(logicbuilder);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { field } = $$props;

	$$self.$$set = $$props => {
		if ("field" in $$props) $$invalidate(0, field = $$props.field);
	};

	return [field];
}

class LogicAccordion extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { field: 0 });
	}
}

export default LogicAccordion;