import './ContentBlockEditor.css.proxy.js';
/* src/features/form/edit/ContentBlockEditor.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out
} from "../../../../web_modules/svelte/internal.js";

import Field from "./Field.js";
import { randomString } from "../../../util/Generate.js";
import { dispatch } from "../../../event/EventBus.js";
import ContentBlockList from "./ContentBlockList.js";

function create_fragment(ctx) {
	let div2;
	let div0;
	let t2;
	let field_1;
	let t3;
	let div1;
	let current;

	field_1 = new Field({
			props: {
				editor: true,
				padding: false,
				field: {
					id: randomString(),
					type: "block-editor",
					value: /*field*/ ctx[0].value,
					configTarget: /*field*/ ctx[0].id,
					configFieldTarget: "value"
				}
			}
		});

	return {
		c() {
			div2 = element("div");
			div0 = element("div");

			div0.innerHTML = `<h5 style="padding-bottom: 0.2em;">Content Block Settings</h5> 
    <hr/>`;

			t2 = space();
			create_component(field_1.$$.fragment);
			t3 = space();
			div1 = element("div");
			div1.innerHTML = `<button class="blocks-button btn btn-light svelte-yw9qn5" type="button">Select Block</button>  <button class="blocks-button btn btn-light svelte-yw9qn5" type="button">Save Block</button>`;
			set_style(div0, "padding-left", "0.5em");
			attr(div1, "class", "flex");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div0);
			append(div2, t2);
			mount_component(field_1, div2, null);
			append(div2, t3);
			append(div2, div1);
			current = true;
		},
		p(ctx, [dirty]) {
			const field_1_changes = {};

			if (dirty & /*field*/ 1) field_1_changes.field = {
				id: randomString(),
				type: "block-editor",
				value: /*field*/ ctx[0].value,
				configTarget: /*field*/ ctx[0].id,
				configFieldTarget: "value"
			};

			field_1.$set(field_1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(field_1.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(field_1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div2);
			destroy_component(field_1);
		}
	};
}

function loadTransformer(value) {
	return value.map(v => {
		return { label: v.name, value: v.value };
	});
}

function instance($$self, $$props, $$invalidate) {
	
	
	let { field } = $$props;
	let { expanded } = $$props;

	function manageBlocks() {
		dispatch("dialog_show", {
			child: ContentBlockList,
			closeOnOutsideClick: false,
			confirmCloseOnDirty: true,
			title: "Manage Content Blocks",
			save: false
		});
	}

	$$self.$$set = $$props => {
		if ("field" in $$props) $$invalidate(0, field = $$props.field);
		if ("expanded" in $$props) $$invalidate(1, expanded = $$props.expanded);
	};

	return [field, expanded];
}

class ContentBlockEditor extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { field: 0, expanded: 1 });
	}
}

export default ContentBlockEditor;