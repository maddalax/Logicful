import{SvelteComponent as f,create_component as d,destroy_component as g,init as w,mount_component as S,noop as h,safe_not_equal as y,transition_in as _,transition_out as v}from"../../../../web_modules/svelte/internal.js";import b from"../../../components/RemoteTable.js";import{dispatch as r}from"../../../event/EventBus.js";import l from"./ManageOptionSets.js";import{getApi as O}from"../../../services/ApiService.js";function N(t){let n,o;return n=new b({props:{headerActions:[{label:"+ New Option Set",onClick:t[0]}],getRows:t[1],hidden:t[2],onEdit:t[4],onDelete:t[5]}}),{c(){d(n.$$.fragment)},m(e,s){S(n,e,s),o=!0},p:h,i(e){if(o)return;_(n.$$.fragment,e),o=!0},o(e){v(n.$$.fragment,e),o=!1},d(e){g(n,e)}}}function R(t,n,o){let{type:e="Selector"}=n;function s(){r("dialog_show",{child:l,title:"Create Option Set",save:!1,props:{isNew:!0}})}async function c(){const i=await O("option-set");return i.map(a=>({id:a.id,Name:a.name,Value:a.value,Type:a.type==="local"?"Inline":"Remote","Last Updated":new Date(a.changeTime).toLocaleString(),"Modified By":a.changeBy,"Forms Using":3,Status:"Published"}))}const p=new Set(["Value","id"]),m=async i=>{r("dialog_show",{child:l,title:"Modifying Option Set",save:!1,props:{name:i.Name}})},u=()=>{alert("delete")};return t.$$set=i=>{"type"in i&&o(3,e=i.type)},[s,c,p,e,m,u]}class $ extends f{constructor(t){super();w(this,t,R,N,y,{type:3})}}export default $;
