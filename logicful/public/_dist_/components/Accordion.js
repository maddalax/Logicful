/* src/components/Accordion.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	create_slot,
	detach,
	element,
	init,
	insert,
	safe_not_equal,
	set_style,
	transition_in,
	transition_out,
	update_slot
} from "../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let div;
	let current;
	const default_slot_template = /*#slots*/ ctx[5].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);

	return {
		c() {
			div = element("div");
			if (default_slot) default_slot.c();
			set_style(div, "padding-bottom", "2em");
		},
		m(target, anchor) {
			insert(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 16) {
					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[4], dirty, null, null);
				}
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	let { id = "" } = $$props;
	let { buttonClass = "" } = $$props;
	let { buttonText = "" } = $$props;
	let { open = false } = $$props;

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("buttonClass" in $$props) $$invalidate(1, buttonClass = $$props.buttonClass);
		if ("buttonText" in $$props) $$invalidate(2, buttonText = $$props.buttonText);
		if ("open" in $$props) $$invalidate(3, open = $$props.open);
		if ("$$scope" in $$props) $$invalidate(4, $$scope = $$props.$$scope);
	};

	return [id, buttonClass, buttonText, open, $$scope, slots];
}

class Accordion extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			id: 0,
			buttonClass: 1,
			buttonText: 2,
			open: 3
		});
	}
}

export default Accordion;