import './Toast.css.proxy.js';
/* src/components/Toast.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	append,
	attr,
	binding_callbacks,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	set_style,
	space,
	text
} from "../../web_modules/svelte/internal.js";

import { dispatch } from "../event/EventBus.js";
import { onMount } from "../../web_modules/svelte.js";

function create_if_block(ctx) {
	let div;
	let strong;
	let t0;
	let t1;
	let button;

	return {
		c() {
			div = element("div");
			strong = element("strong");
			t0 = text(/*title*/ ctx[1]);
			t1 = space();
			button = element("button");
			button.innerHTML = `<span aria-hidden="true">Ã—</span>`;
			attr(strong, "class", "mr-auto");
			attr(button, "type", "button");
			attr(button, "class", "ml-2 mb-1 close");
			attr(button, "data-dismiss", "toast");
			attr(button, "aria-label", "Close");
			attr(div, "class", "toast-header");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, strong);
			append(strong, t0);
			append(div, t1);
			append(div, button);
		},
		p(ctx, dirty) {
			if (dirty & /*title*/ 2) set_data(t0, /*title*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let div1;
	let t0;
	let div0;
	let t1;
	let if_block = /*title*/ ctx[1] && create_if_block(ctx);

	return {
		c() {
			div2 = element("div");
			div1 = element("div");
			if (if_block) if_block.c();
			t0 = space();
			div0 = element("div");
			t1 = text(/*message*/ ctx[0]);
			attr(div0, "class", "toast-body");
			attr(div1, "class", "toast svelte-hsmqtg");
			set_style(div1, "position", "absolute");
			set_style(div1, "top", "0");
			set_style(div1, "right", "0");
			attr(div2, "aria-live", "polite");
			attr(div2, "aria-atomic", "true");
			attr(div2, "class", "toast-container svelte-hsmqtg");
		},
		m(target, anchor) {
			insert(target, div2, anchor);
			append(div2, div1);
			if (if_block) if_block.m(div1, null);
			append(div1, t0);
			append(div1, div0);
			append(div0, t1);
			/*div1_binding*/ ctx[4](div1);
		},
		p(ctx, [dirty]) {
			if (/*title*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div1, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*message*/ 1) set_data(t1, /*message*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div2);
			if (if_block) if_block.d();
			/*div1_binding*/ ctx[4](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { id = "" } = $$props;
	let { message = "" } = $$props;
	let { title = "" } = $$props;
	let component;

	onMount(() => {
		
	});

	function div1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			component = $$value;
			$$invalidate(2, component);
		});
	}

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(3, id = $$props.id);
		if ("message" in $$props) $$invalidate(0, message = $$props.message);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
	};

	return [message, title, component, id, div1_binding];
}

class Toast extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { id: 3, message: 0, title: 1 });
	}
}

export default Toast;