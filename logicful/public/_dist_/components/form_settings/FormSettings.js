/* src/components/form_settings/FormSettings.svelte generated by Svelte v3.25.1 */
import {
	SvelteComponent,
	append,
	attr,
	check_outros,
	create_component,
	destroy_component,
	detach,
	element,
	group_outros,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../../../web_modules/svelte/internal.js";

import { onMount } from "../../../web_modules/svelte.js";
import FormSettingsDetails from "./FormSettingsDetails.js";
import FormSettingsSidebar from "./FormSettingsSidebar.js";

function create_if_block_1(ctx) {
	let formsettingssidebar;
	let current;

	formsettingssidebar = new FormSettingsSidebar({
			props: {
				form: /*form*/ ctx[0],
				selected: /*selected*/ ctx[1]
			}
		});

	return {
		c() {
			create_component(formsettingssidebar.$$.fragment);
		},
		m(target, anchor) {
			mount_component(formsettingssidebar, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const formsettingssidebar_changes = {};
			if (dirty & /*form*/ 1) formsettingssidebar_changes.form = /*form*/ ctx[0];
			if (dirty & /*selected*/ 2) formsettingssidebar_changes.selected = /*selected*/ ctx[1];
			formsettingssidebar.$set(formsettingssidebar_changes);
		},
		i(local) {
			if (current) return;
			transition_in(formsettingssidebar.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(formsettingssidebar.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(formsettingssidebar, detaching);
		}
	};
}

// (21:8) {#if form != null}
function create_if_block(ctx) {
	let formsettingsdetails;
	let current;

	formsettingsdetails = new FormSettingsDetails({
			props: {
				form: /*form*/ ctx[0],
				selected: /*selected*/ ctx[1]
			}
		});

	return {
		c() {
			create_component(formsettingsdetails.$$.fragment);
		},
		m(target, anchor) {
			mount_component(formsettingsdetails, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const formsettingsdetails_changes = {};
			if (dirty & /*form*/ 1) formsettingsdetails_changes.form = /*form*/ ctx[0];
			if (dirty & /*selected*/ 2) formsettingsdetails_changes.selected = /*selected*/ ctx[1];
			formsettingsdetails.$set(formsettingsdetails_changes);
		},
		i(local) {
			if (current) return;
			transition_in(formsettingsdetails.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(formsettingsdetails.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(formsettingsdetails, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div4;
	let div3;
	let div2;
	let div0;
	let t;
	let div1;
	let current;
	let if_block0 = /*form*/ ctx[0] != null && create_if_block_1(ctx);
	let if_block1 = /*form*/ ctx[0] != null && create_if_block(ctx);

	return {
		c() {
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			if (if_block0) if_block0.c();
			t = space();
			div1 = element("div");
			if (if_block1) if_block1.c();
			attr(div0, "class", "col-12 col-md-4 d-none d-lg-block");
			attr(div1, "class", "col-12 col-lg-8");
			attr(div2, "class", "row pt-3 pt-md-0");
			attr(div3, "class", "container");
			attr(div4, "class", "section section-lg pt-6 pt-md-6 bg-soft");
		},
		m(target, anchor) {
			insert(target, div4, anchor);
			append(div4, div3);
			append(div3, div2);
			append(div2, div0);
			if (if_block0) if_block0.m(div0, null);
			append(div2, t);
			append(div2, div1);
			if (if_block1) if_block1.m(div1, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*form*/ ctx[0] != null) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty & /*form*/ 1) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div0, null);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (/*form*/ ctx[0] != null) {
				if (if_block1) {
					if_block1.p(ctx, dirty);

					if (dirty & /*form*/ 1) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div1, null);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}
		},
		i(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			current = true;
		},
		o(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div4);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { form } = $$props;
	let { selected } = $$props;

	onMount(() => {
		console.log(form);
	});

	$$self.$$set = $$props => {
		if ("form" in $$props) $$invalidate(0, form = $$props.form);
		if ("selected" in $$props) $$invalidate(1, selected = $$props.selected);
	};

	return [form, selected];
}

class FormSettings extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { form: 0, selected: 1 });
	}
}

export default FormSettings;