import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, t as text, k as space, c as claim_element, a as children, b as claim_text, d as detach, l as claim_space, f as attr, h as insert, j as append, n as noop, m as create_component, p as claim_component, q as mount_component, r as transition_in, u as transition_out, v as destroy_component } from './client.a93cf518.js';
import { A as AccountSidebar } from './AccountSidebar.f42b0ce9.js';

/* src\components\account\Settings.svelte generated by Svelte v3.24.1 */

function create_fragment(ctx) {
	let div14;
	let div13;
	let div12;
	let div11;
	let h2;
	let t0;
	let t1;
	let form;
	let div4;
	let div1;
	let div0;
	let label0;
	let t2;
	let t3;
	let input0;
	let t4;
	let div3;
	let div2;
	let label1;
	let t5;
	let t6;
	let input1;
	let t7;
	let div9;
	let div6;
	let div5;
	let label2;
	let t8;
	let t9;
	let input2;
	let t10;
	let div8;
	let div7;
	let label3;
	let t11;
	let t12;
	let input3;
	let t13;
	let div10;
	let button;
	let t14;

	return {
		c() {
			div14 = element("div");
			div13 = element("div");
			div12 = element("div");
			div11 = element("div");
			h2 = element("h2");
			t0 = text("General information");
			t1 = space();
			form = element("form");
			div4 = element("div");
			div1 = element("div");
			div0 = element("div");
			label0 = element("label");
			t2 = text("First Name");
			t3 = space();
			input0 = element("input");
			t4 = space();
			div3 = element("div");
			div2 = element("div");
			label1 = element("label");
			t5 = text("Last Name");
			t6 = space();
			input1 = element("input");
			t7 = space();
			div9 = element("div");
			div6 = element("div");
			div5 = element("div");
			label2 = element("label");
			t8 = text("Email");
			t9 = space();
			input2 = element("input");
			t10 = space();
			div8 = element("div");
			div7 = element("div");
			label3 = element("label");
			t11 = text("Phone");
			t12 = space();
			input3 = element("input");
			t13 = space();
			div10 = element("div");
			button = element("button");
			t14 = text("Save");
			this.h();
		},
		l(nodes) {
			div14 = claim_element(nodes, "DIV", {});
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			h2 = claim_element(div11_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "General information");
			h2_nodes.forEach(detach);
			t1 = claim_space(div11_nodes);
			form = claim_element(div11_nodes, "FORM", {});
			var form_nodes = children(form);
			div4 = claim_element(form_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			label0 = claim_element(div0_nodes, "LABEL", { for: true });
			var label0_nodes = children(label0);
			t2 = claim_text(label0_nodes, "First Name");
			label0_nodes.forEach(detach);
			t3 = claim_space(div0_nodes);

			input0 = claim_element(div0_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true
			});

			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			t4 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			label1 = claim_element(div2_nodes, "LABEL", { for: true });
			var label1_nodes = children(label1);
			t5 = claim_text(label1_nodes, "Last Name");
			label1_nodes.forEach(detach);
			t6 = claim_space(div2_nodes);

			input1 = claim_element(div2_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true
			});

			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			t7 = claim_space(form_nodes);
			div9 = claim_element(form_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div6 = claim_element(div9_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			label2 = claim_element(div5_nodes, "LABEL", { for: true });
			var label2_nodes = children(label2);
			t8 = claim_text(label2_nodes, "Email");
			label2_nodes.forEach(detach);
			t9 = claim_space(div5_nodes);

			input2 = claim_element(div5_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true
			});

			div5_nodes.forEach(detach);
			div6_nodes.forEach(detach);
			t10 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label3 = claim_element(div7_nodes, "LABEL", { for: true });
			var label3_nodes = children(label3);
			t11 = claim_text(label3_nodes, "Phone");
			label3_nodes.forEach(detach);
			t12 = claim_space(div7_nodes);

			input3 = claim_element(div7_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true
			});

			div7_nodes.forEach(detach);
			div8_nodes.forEach(detach);
			div9_nodes.forEach(detach);
			t13 = claim_space(form_nodes);
			div10 = claim_element(form_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			button = claim_element(div10_nodes, "BUTTON", { type: true, class: true });
			var button_nodes = children(button);
			t14 = claim_text(button_nodes, "Save");
			button_nodes.forEach(detach);
			div10_nodes.forEach(detach);
			form_nodes.forEach(detach);
			div11_nodes.forEach(detach);
			div12_nodes.forEach(detach);
			div13_nodes.forEach(detach);
			div14_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h2, "class", "h5 mb-4");
			attr(label0, "for", "first_name");
			attr(input0, "class", "form-control");
			attr(input0, "id", "first_name");
			attr(input0, "type", "text");
			attr(input0, "placeholder", "Enter your first name");
			attr(div0, "class", "mb-3");
			attr(div1, "class", "col-md-6 mb-3");
			attr(label1, "for", "last_name");
			attr(input1, "class", "form-control");
			attr(input1, "id", "last_name");
			attr(input1, "type", "text");
			attr(input1, "placeholder", "Also your last name");
			attr(div2, "class", "mb-3");
			attr(div3, "class", "col-md-6 mb-3");
			attr(div4, "class", "row");
			attr(label2, "for", "email");
			attr(input2, "class", "form-control");
			attr(input2, "id", "email");
			attr(input2, "type", "email");
			attr(input2, "placeholder", "name@company.com");
			attr(div5, "class", "mb-3");
			attr(div6, "class", "col-md-6 mb-3");
			attr(label3, "for", "phone");
			attr(input3, "class", "form-control");
			attr(input3, "id", "phone");
			attr(input3, "type", "number");
			attr(input3, "placeholder", "+12-345 678 910");
			attr(div7, "class", "mb-3");
			attr(div8, "class", "col-md-6 mb-3");
			attr(div9, "class", "row");
			attr(button, "type", "submit");
			attr(button, "class", "btn btn-primary");
			attr(div10, "class", "mt-3");
			attr(div11, "class", "card card-body bg-white border-light mb-4");
			attr(div12, "class", "col-lg-12");
			attr(div13, "class", "row");
		},
		m(target, anchor) {
			insert(target, div14, anchor);
			append(div14, div13);
			append(div13, div12);
			append(div12, div11);
			append(div11, h2);
			append(h2, t0);
			append(div11, t1);
			append(div11, form);
			append(form, div4);
			append(div4, div1);
			append(div1, div0);
			append(div0, label0);
			append(label0, t2);
			append(div0, t3);
			append(div0, input0);
			append(div4, t4);
			append(div4, div3);
			append(div3, div2);
			append(div2, label1);
			append(label1, t5);
			append(div2, t6);
			append(div2, input1);
			append(form, t7);
			append(form, div9);
			append(div9, div6);
			append(div6, div5);
			append(div5, label2);
			append(label2, t8);
			append(div5, t9);
			append(div5, input2);
			append(div9, t10);
			append(div9, div8);
			append(div8, div7);
			append(div7, label3);
			append(label3, t11);
			append(div7, t12);
			append(div7, input3);
			append(form, t13);
			append(form, div10);
			append(div10, button);
			append(button, t14);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div14);
		}
	};
}

class Settings extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

/* src\routes\account-settings\index.svelte generated by Svelte v3.24.1 */

function create_fragment$1(ctx) {
	let div5;
	let div4;
	let div3;
	let div2;
	let div0;
	let accountsidebar;
	let t;
	let div1;
	let settings;
	let current;
	accountsidebar = new AccountSidebar({ props: { page: "settings" } });
	settings = new Settings({});

	return {
		c() {
			div5 = element("div");
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			create_component(accountsidebar.$$.fragment);
			t = space();
			div1 = element("div");
			create_component(settings.$$.fragment);
			this.h();
		},
		l(nodes) {
			div5 = claim_element(nodes, "DIV", {});
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(accountsidebar.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach);
			t = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(settings.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "col-12 col-md-4 d-none d-lg-block");
			attr(div1, "class", "col-12 col-lg-8");
			attr(div2, "class", "row pt-5 pt-md-0");
			attr(div3, "class", "container");
			attr(div4, "class", "section section-lg pt-5 pt-md-7 bg-soft");
		},
		m(target, anchor) {
			insert(target, div5, anchor);
			append(div5, div4);
			append(div4, div3);
			append(div3, div2);
			append(div2, div0);
			mount_component(accountsidebar, div0, null);
			append(div2, t);
			append(div2, div1);
			mount_component(settings, div1, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(accountsidebar.$$.fragment, local);
			transition_in(settings.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(accountsidebar.$$.fragment, local);
			transition_out(settings.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div5);
			destroy_component(accountsidebar);
			destroy_component(settings);
		}
	};
}

class Account_settings extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment$1, safe_not_equal, {});
	}
}

export default Account_settings;
