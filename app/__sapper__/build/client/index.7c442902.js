import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, t as text, c as claim_element, a as children, b as claim_text, d as detach, f as attr, g as set_style, h as insert, j as append, n as noop, o as onMount, k as space, l as claim_space, m as create_component, p as claim_component, q as mount_component, r as transition_in, u as transition_out, v as destroy_component } from './client.a93cf518.js';
import './FormList.61aa3e8b.js';

/* src\components\dashboard\RecentForms.svelte generated by Svelte v3.24.1 */

function create_fragment(ctx) {
	let div;
	let h5;
	let t;

	return {
		c() {
			div = element("div");
			h5 = element("h5");
			t = text("Recently Viewed Forms");
			this.h();
		},
		l(nodes) {
			div = claim_element(nodes, "DIV", { style: true });
			var div_nodes = children(div);
			h5 = claim_element(div_nodes, "H5", { class: true });
			var h5_nodes = children(h5);
			t = claim_text(h5_nodes, "Recently Viewed Forms");
			h5_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h5, "class", "h5 svelte-sz94a4");
			set_style(div, "width", "100%");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, h5);
			append(h5, t);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self) {

	onMount(() => {
	});

	return [];
}

class RecentForms extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

/* src\components\dashboard\SubmissionsDash.svelte generated by Svelte v3.24.1 */

function create_fragment$1(ctx) {
	let div1;
	let h5;
	let t0;
	let t1;
	let div0;
	let ul;

	return {
		c() {
			div1 = element("div");
			h5 = element("h5");
			t0 = text("Recently Viewed Form Submissions");
			t1 = space();
			div0 = element("div");
			ul = element("ul");
			this.h();
		},
		l(nodes) {
			div1 = claim_element(nodes, "DIV", { style: true });
			var div1_nodes = children(div1);
			h5 = claim_element(div1_nodes, "H5", { class: true });
			var h5_nodes = children(h5);
			t0 = claim_text(h5_nodes, "Recently Viewed Form Submissions");
			h5_nodes.forEach(detach);
			t1 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			ul = claim_element(div0_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			ul_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h5, "class", "h5 svelte-13rir58");
			attr(ul, "class", "list-group list-group-flush");
			attr(div0, "class", "card-body px-0 pt-0");
			set_style(div1, "width", "100%");
		},
		m(target, anchor) {
			insert(target, div1, anchor);
			append(div1, h5);
			append(h5, t0);
			append(div1, t1);
			append(div1, div0);
			append(div0, ul);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div1);
		}
	};
}

function instance$1($$self) {
	let forms = [];

	onMount(() => {
		
	}); // forms = getRecentlyViewedSubmissions()

	return [forms];
}

class SubmissionsDash extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});
	}
}

/* src\components\dashboard\Dashboard.svelte generated by Svelte v3.24.1 */

function create_fragment$2(ctx) {
	let div14;
	let div13;
	let div5;
	let div4;
	let div3;
	let div2;
	let div0;
	let a0;
	let span0;
	let t0;
	let t1;
	let div1;
	let a1;
	let span1;
	let t2;
	let t3;
	let div12;
	let div8;
	let div7;
	let div6;
	let recentforms;
	let t4;
	let div11;
	let div10;
	let div9;
	let submissionsdash;
	let current;
	recentforms = new RecentForms({});
	submissionsdash = new SubmissionsDash({});

	return {
		c() {
			div14 = element("div");
			div13 = element("div");
			div5 = element("div");
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			a0 = element("a");
			span0 = element("span");
			t0 = text(" Create Form");
			t1 = space();
			div1 = element("div");
			a1 = element("a");
			span1 = element("span");
			t2 = text(" My Folders");
			t3 = space();
			div12 = element("div");
			div8 = element("div");
			div7 = element("div");
			div6 = element("div");
			create_component(recentforms.$$.fragment);
			t4 = space();
			div11 = element("div");
			div10 = element("div");
			div9 = element("div");
			create_component(submissionsdash.$$.fragment);
			this.h();
		},
		l(nodes) {
			div14 = claim_element(nodes, "DIV", {});
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div5 = claim_element(div13_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { style: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			span0 = claim_element(a0_nodes, "SPAN", { class: true });
			children(span0).forEach(detach);
			t0 = claim_text(a0_nodes, " Create Form");
			a0_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t1 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { style: true });
			var div1_nodes = children(div1);
			a1 = claim_element(div1_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			span1 = claim_element(a1_nodes, "SPAN", { class: true });
			children(span1).forEach(detach);
			t2 = claim_text(a1_nodes, " My Folders");
			a1_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			t3 = claim_space(div13_nodes);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div8 = claim_element(div12_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			claim_component(recentforms.$$.fragment, div6_nodes);
			div6_nodes.forEach(detach);
			div7_nodes.forEach(detach);
			div8_nodes.forEach(detach);
			t4 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			claim_component(submissionsdash.$$.fragment, div9_nodes);
			div9_nodes.forEach(detach);
			div10_nodes.forEach(detach);
			div11_nodes.forEach(detach);
			div12_nodes.forEach(detach);
			div13_nodes.forEach(detach);
			div14_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(span0, "class", "fas fa-plus");
			attr(a0, "href", "/builder");
			attr(a0, "class", "btn btn-sm btn-outline-dark");
			set_style(div0, "padding-right", "0.5em");
			attr(span1, "class", "far fa-folder");
			attr(a1, "href", "/folder");
			attr(a1, "class", "btn btn-sm btn-outline-dark");
			set_style(div1, "padding-right", "0.5em");
			attr(div2, "class", "card-body d-block d-md-flex align-items-center");
			attr(div3, "class", "card border-light svelte-1q1y3k7");
			attr(div4, "class", "col-12 col-lg-12 mb-4");
			attr(div5, "class", "row");
			attr(div6, "class", "card-body d-block d-md-flex align-items-center");
			attr(div7, "class", "card border-light svelte-1q1y3k7");
			attr(div8, "class", "col-12 col-sm-6 mb-4");
			attr(div9, "class", "card-body d-block d-md-flex align-items-center");
			attr(div10, "class", "card border-light svelte-1q1y3k7");
			attr(div11, "class", "col-12 col-sm-6 mb-4");
			attr(div12, "class", "row");
			attr(div13, "class", "col-12 col-lg-12");
		},
		m(target, anchor) {
			insert(target, div14, anchor);
			append(div14, div13);
			append(div13, div5);
			append(div5, div4);
			append(div4, div3);
			append(div3, div2);
			append(div2, div0);
			append(div0, a0);
			append(a0, span0);
			append(a0, t0);
			append(div2, t1);
			append(div2, div1);
			append(div1, a1);
			append(a1, span1);
			append(a1, t2);
			append(div13, t3);
			append(div13, div12);
			append(div12, div8);
			append(div8, div7);
			append(div7, div6);
			mount_component(recentforms, div6, null);
			append(div12, t4);
			append(div12, div11);
			append(div11, div10);
			append(div10, div9);
			mount_component(submissionsdash, div9, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(recentforms.$$.fragment, local);
			transition_in(submissionsdash.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(recentforms.$$.fragment, local);
			transition_out(submissionsdash.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div14);
			destroy_component(recentforms);
			destroy_component(submissionsdash);
		}
	};
}

class Dashboard extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment$2, safe_not_equal, {});
	}
}

/* src\routes\index.svelte generated by Svelte v3.24.1 */

function create_fragment$3(ctx) {
	let div3;
	let div2;
	let div1;
	let div0;
	let dashboard;
	let current;
	dashboard = new Dashboard({});

	return {
		c() {
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			create_component(dashboard.$$.fragment);
			this.h();
		},
		l(nodes) {
			div3 = claim_element(nodes, "DIV", { style: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(dashboard.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(div0, "class", "row pt-5 pt-md-0");
			attr(div1, "class", "container");
			attr(div2, "class", "section section-lg pt-6 pt-md-6 bg-soft; height: 1vh;");
			set_style(div3, "background-color", "#f5f9fe");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div2);
			append(div2, div1);
			append(div1, div0);
			mount_component(dashboard, div0, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(dashboard.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(dashboard.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div3);
			destroy_component(dashboard);
		}
	};
}

class Routes extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment$3, safe_not_equal, {});
	}
}

export default Routes;
